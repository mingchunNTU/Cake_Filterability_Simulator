 /*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     cfdemSolverPiso;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime 1e5 ; 

deltaT 1e3 ; 

writeControl    adjustableRunTime;

writeInterval 1e4 ; 

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

DimensionedConstants
{
    unitSet             MICRO; // SI;

    MICROCoeffs
    {
        universal
        {
            c               c [ 0 1 -1 0 0 0 0 ] 2.99792e+8;  
            G               G [ -1 3 -2 0 0 0 0 ] 6.67429e-20; 
            h               h [ 1 2 -1 0 0 0 0 ] 6.62607e-13; 
        }
        electromagnetic
        {
            e               e [ 0 0 1 0 0 1 0 ] 1.60218e-7; 
        }
        atomic
        {
            me              me [ 1 0 0 0 0 0 0 ] 9.10938e-19; 
            mp              mp [ 1 0 0 0 0 0 0 ] 1.67262e-15; 
        }
        physicoChemical
        {
            mu              mu [ 1 0 0 0 0 0 0 ] 1.66054e-15; 
            k               k [ 1 2 -2 -1 0 0 0 ] 1.38065e-8; 
        }
        standard
        {
            //- Standard pressure [bar]
            Pstd            Pstd [ 1 -1 -2 0 0 0 0 ] 100; 
            //- Standard temperature [degK]
            Tstd            Tstd [ 0 0 0 1 0 0 0 ] 298.15; 
        }
    }

    SICoeffs
    {
        universal
        {
            c               c [ 0 1 -1 0 0 0 0 ] 2.99792e+08; // speed of light in vacuum (m/s)
            G               G [ -1 3 -2 0 0 0 0 ] 6.67429e-11; // gravitational constant (m^3/kg/s^2)
            h               h [ 1 2 -1 0 0 0 0 ] 6.62607e-34; // Planck's constant (m^2*kg/s)
        }
        electromagnetic
        {
            e               e [ 0 0 1 0 0 1 0 ] 1.60218e-19; // elementary charge (Columnb)
        }
        atomic
        {
            me              me [ 1 0 0 0 0 0 0 ] 9.10938e-31; // electron mass (kg)
            mp              mp [ 1 0 0 0 0 0 0 ] 1.67262e-27; // proton mass (kg)
        }
        physicoChemical
        {
            mu              mu [ 1 0 0 0 0 0 0 ] 1.66054e-27; // atomic mass unit (kg)
            k               k [ 1 2 -2 -1 0 0 0 ] 1.38065e-23; // Boltzman constant (m2*kg/s^2/K)
        }
        standard
        {
            //- Standard pressure [Pa]
            Pstd            Pstd [ 1 -1 -2 0 0 0 0 ] 100000; // 1 bar 
            //- Standard temperature [degK]
            Tstd            Tstd [ 0 0 0 1 0 0 0 ] 298.15; // 25 C
        }
    }
}






// functions must be defined before ****** line
functions
{
    probes
    {
        type        probes;
        functionObjectLibs ( "libsampling.so" );  
        name        probes;
        probeLocations
        (
		( 0 0 5e4 )  
		( 0 0 -4e4 ) 
        );

        fields ( p U voidfraction);

        outputControl   runTime;
	outputInterval 1e4 ; 
    }

}


// ************************************************************************* //



