Installation
==================
This project estimates the filter cake resistance with specified crystal size distribution (CSD) using discrete element method and Kozeny-Carman equation.
This project is composed of two parts. First part is a LIGGGHTS template to simulate the filter cake structure with specified CSD. 
Second part are several useful python scripts that facilitate the simulation.

To execute the python scritps, please make sure that you install Python 3 including **numpy, matplotlib, scipy, csv, copy, datetime and os** package on your computer.
The python script can be executed directly with a python core. To execute the LIGGGHTS template, it's needed to install `LIGGGHTS <https://www.cfdem.com/media/DEM/docu/Manual.html>`_. on the computer. 
Please install `CFDEM <https://www.cfdem.com/media/CFDEM/docu/CFDEMcoupling_Manual.html>`_, which will help you install and configure LIGGGHTS automatically. 
After you install CFDEM, please execute the ErgunTestMPI example in tutorials/cfdemSolverPiso/ErgunTestMPI. If the simulation ends successfully, your installlation is complete and parDEMrun command is available. 
It is suggested to install CFDEM on a computer with Ubuntu 20.04.6 or newer version. 

To download the project, please install git and clone the source code of the project

.. code-block:: console

	cd ~
	sudo apt-get install git
	git clone https://github.com/mingchunNTU/Cake_Filterability_Simulator.git

Important scripts
=======================
There're several useful python scripts in src directory, which help edit LIGGGHTS template and visualize the simulation result.
The explaination of each script is shown below. There's a section that defines exlain adjustable parameters in the beginning of each script. 
Most scripts require specified crystal size distriubtion as input. 
Please define the directory that contains specified CSD using the parameter setting_dir in each script.

* scr/CSD_DEM_report.py: Generate a report based on the specified CSD which helps the user to edit the LIGGGHTS template
* src/estimate_cake_resistance.py: Estimate the filter cake resistance based on specified CSD and simulated cake porosity
* src/plot_CSD.py: Plot the specified CSD on a number or volume basis
* src/plot_porosity_trajectory.py: Plot the porosity trajectory in the sampling region, which is useful to check if the cake structure is stable or not
* src/CSD_filter.py: Remove the particle template whose volume fraction is smaller than the specified lower bound 

File Structure of the examples/non-uniform
================================================
A LIGGGHTS template is provided in examples/non-uniform directory, which should be edited according to the specified CSD and users' need. 
The description of the files in the non-uniform directory is shown below. To execute LIGGGHTS simulation, please enter :code:`source ~/Allrun.sh` in the terminal. 

* Allrun.sh: Execution script of the example
* liggghts_configuration.txt: LIGGGHTS template, which should be modified according to specified crystal size distribution
* CSD.csv: Your specified CSD
* CSD_DEM_report.txt: The report generated by CSD_DEM_report.py. This files contain system dimension section and particle template section needed for liggghts_configuration.txt.

* script
	* python script: Contains python module for postProcessing.sh
	* clean_case.sh: Remove the previous simulation result (**dependent script of Allrun.sh**)
	* paraview.sh: Change the directory to Result/vtk_file and open paraview program for the post processing. Please make sure that you install paraview.
	* parDEMrun.sh: Execute parDEMrun command for LIGGGHTS simulation (**dependent script of Allrun.sh**)
	* postProcessing.sh: Transform the LIGGGHTS simulation result into readable format for plot_porosity_trajectory.py (**dependent script of Allrun.sh**)

* Result
	* DEM_porosity.csv: Simulated cake porosity trajectory
	* vtk_file: vtk files of LIGGGHTS simulation, which can be visuallized using software paraview

Parallel Computing
=====================================================
LIGGGHTS supports parallel computing, which uses several cpus simultaneously to perform the simulation. 
To check the available number of processors in your computer, please type the following commands through command line.

.. code-block:: console

	cat /proc/cpuinfo | grep "^cpu cores" | uniq
	
To change the number of cpu used in the simulation, please edit the *nrProcs* parameter in script/parDEMrun.sh .

Estimation of Filter Cake Resistance
=====================================================
The unit used in *liggghts_configuration.txt* is **not SI unit**. 
It is found that if *SI* unit is used, the numerical value of particle volume will become too small and a numerical problem will happen. 
Thus, *micro* unit is used for LIGGGHTS simulation. The conversion factor between *SI* unit and *micro* unit is shown below.

* Length: :math:`1\ \mu m=10^{-6}\ m` 
* Time: :math:`1\ \mu s=10^{-6}\ s`
* Mass: :math:`1\ pg=10^{-15}\ kg`
* Velocity: :math:`1\ \mu m/ \mu s=1\ m/s`
* Gravity: :math:`1\ \mu m/{\mu s^2}=10^{6}\ m/s^2`
* Density: :math:`1\ pg/{\mu m^3}=10^{3}\ kg/m^3`
* Pressure (Youngs's Modulus): :math:`1\ pg/(\mu m  \cdot \mu s^2)=10^{3}\ kg/(m \cdot s^2)`
* Cohesion Energy Density: :math:`1\ pg/(\mu m  \cdot \mu s^2)=10^{3}\ kg/(m \cdot s^2)`
* Dynamic Viscosity: :math:`1\ pg/(\mu m \cdot \mu s)=10^{-3}\ kg/(m \cdot s)`
* Kinematic Viscosity: :math:`1\ {\mu m^2}/{\mu s}=10^{-6}\ m^2/s`
* Filter Cake Resistance: :math:`1\ {\mu m}/pg=10^{9}\ m/kg`

To simulate the filter cake structure, please specify CSD in CSD.csv and change the parameter setting_dir in each python script to fit your environment.
The size is crystal diameter instead of crystal radius. The crystal size is in the unit of um.
Then, execute src/CSD_DEM_report.py, which will generate *CSD_DEM_report.txt* in the same directory as CSD.csv.
Please replace the system dimension section and particle template section in *liggghts_configuration.txt* with the corresponding section in *CSD_DEM_report.txt*
Furthermore, please make sure the DEM parameters used do not violate the constraint mentioned in "DEM Report for Specified CSD" section in *CSD_DEM_report.txt*
After configuring *liggghts_configuration.txt*, please enter :code:`source ~/Allrun.sh` in the terminal to execute the program. 
After the simulation complete, the calculated porosity will be stored in *Result/DEM_porosity.csv*. The vtk files of the simulation is stored in *Result/vtk_file*. 
The default time step is 0.01 us, which is 25% of Rayleigh time step when the particle diameter is 1 um. 
If the crystal is much larger than 1 um, a larger time step can be used, and the number of time step can be reduced.

After LIGGGHTS simulation, please use estimate_cake_resistance.py to estimate the filter cake resistance. The porosity is calculated by previous LIGGGHTS simulation. 




Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
